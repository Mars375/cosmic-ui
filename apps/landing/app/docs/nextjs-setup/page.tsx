'use client';

import { CodeBlock } from '../../components/code-block';

export default function NextJSSetupPage() {
  return (
    <div>
      <h1 className="text-4xl font-bold mb-8 text-foreground">Setup Next.js</h1>

      <p className="text-foreground mb-8">
        Configuration optimale de CosmicUI avec Next.js 13+ (App Router) pour
        obtenir les meilleures performances et la meilleure DX.
      </p>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Structure de projet recommandÃ©e
      </h2>

      <p className="text-foreground mb-6">
        Organisation suggÃ©rÃ©e pour un projet Next.js avec CosmicUI :
      </p>

      <CodeBlock
        showPackageManager={false}
        language="bash"
        filePath="project-structure"
      >
        {`my-app/
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ globals.css
â”‚   â”œâ”€â”€ layout.tsx
â”‚   â””â”€â”€ page.tsx
â”œâ”€â”€ components/
â”‚   â””â”€â”€ ui/
â”œâ”€â”€ lib/
â”‚   â””â”€â”€ utils.ts
â”œâ”€â”€ public/
â”œâ”€â”€ styles/
â”œâ”€â”€ tailwind.config.ts
â”œâ”€â”€ tsconfig.json
â””â”€â”€ package.json`}
      </CodeBlock>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Configuration TypeScript
      </h2>

      <CodeBlock filePath="tsconfig.json" language="json">
        {`{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "ES6"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "baseUrl": ".",
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}`}
      </CodeBlock>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Layout Root
      </h2>

      <p className="text-foreground mb-6">
        Configurez votre layout principal pour le thÃ¨me global :
      </p>

      <CodeBlock filePath="app/layout.tsx" language="typescript">
        {`// app/layout.tsx
import { Inter } from 'next/font/google'
import { ThemeProvider } from 'next-themes'
import { cn } from '@/lib/utils'
import './globals.css'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'My App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={cn(inter.className, 'min-h-screen bg-background font-sans antialiased')}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {children}
        </ThemeProvider>
      </body>
    </html>
  )
}`}
      </CodeBlock>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Gestion du thÃ¨me
      </h2>

      <CodeBlock filePath="lib/theme-provider.tsx" language="typescript">
        {`'use client'

import * as React from 'react'
import { ThemeProvider as NextThemesProvider } from 'next-themes'
import { type ThemeProviderProps } from 'next-themes/dist/types'

export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
  return <NextThemesProvider {...props}>{children}</NextThemesProvider>
}`}
      </CodeBlock>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Utilitaires
      </h2>

      <CodeBlock filePath="lib/utils.ts" language="typescript">
        {`import { type ClassValue, clsx } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}`}
      </CodeBlock>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Configuration globals.css
      </h2>

      <CodeBlock filePath="app/globals.css" language="css">
        {`@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}`}
      </CodeBlock>

      <h2 className="text-2xl font-semibold mb-6 text-foreground">
        Configuration next.config.ts
      </h2>

      <CodeBlock filePath="next.config.ts" language="typescript">
        {`/** @type {import('next').NextConfig} */
const nextConfig = {
  transpilePackages: [
    '@cosmic-ui/ui',
    '@cosmic-ui/tokens',
  ],
  experimental: {
    optimizeCss: true,
  },
}

export default nextConfig`}
      </CodeBlock>

      <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6 mt-12">
        <h3 className="text-green-800 dark:text-green-200 font-semibold mb-2">
          ðŸš€ OptimisÃ©
        </h3>
        <p className="text-green-700 dark:text-green-300">
          Cette configuration est optimisÃ©e pour les performances Next.js avec
          support SSR/SSG et tree-shaking automatique.
        </p>
      </div>
    </div>
  );
}
